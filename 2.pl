#!/usr/bin/env perl
#<p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>
#<p style="text-align:center;">1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>
#<p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>

use strict;
use warnings;
use List::Util 'sum';

if (!@ARGV) {
  print "No arguments given\n";
  exit 1;
}
sub generate_even_fibs_smaller_than {
  my ($max_val, $x, $y) = (shift, 0,1);
  my @ret = ();
  for (my $val = 0; $val < $max_val; ($x, $y) = ($y, $val)) {
    $val = $x + $y;
    push @ret, $val unless ($val % 2);
  }
  return @ret;
}

my @fibs = generate_even_fibs_smaller_than($ARGV[0]);
my $res  = sum @fibs;
print "$res\n";
